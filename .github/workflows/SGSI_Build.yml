name: SGSI_Build

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'ROM_URL'
        required: true
        default: ''
      TYPE:
        description: 'OS TYPE'
        required: true
        default: 'Generic'
      ROM:
        description: 'Name of Rom'
        required: true
        default: ''
      VERSION:
        description: 'Android Version of Source'
        required: true
        default: '12'
      SF:
        description: 'Upload to Sourceforge'
        required: true
        default: 'false'
      WeT:
        description: 'Upload to WeTransfer'
        required: true
        default: 'true'
      PD:
        description: 'Upload to PixelDrain'
        required: true
        default: 'false'
      GHR:
        description: 'Upload to GitHub Release'
        required: true
        default: 'false'

env:
  ROM_URL: ${{ github.event.inputs.ROM_URL }}
  TYPE: ${{ github.event.inputs.TYPE }}
  VERSION: ${{ github.event.inputs.VERSION }}
  ROM: ${{ github.event.inputs.ROM }}
  GHR: ${{ github.event.inputs.GHR }}
  SF: ${{ github.event.inputs.SF }}
  WET: ${{ github.event.inputs.WeT }}
  PD: ${{ github.event.inputs.PD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting up the SPICES
        run: |
          sudo apt-get install -y git unzip curl aria2 expect

      - name: Cloning...
        run: |
          if [ "$VERSION" == "12" ]; then
            git clone --recurse-submodules https://github.com/rahulkhatri137/SGSIs -b main SGSIs
          elif [ "$VERSION" == "11" ]; then
            git clone --recurse-submodules https://github.com/rahulkhatri137/SGSIs -b main11 SGSIs
          elif [ "$VERSION" == "13" ]; then
            git clone --recurse-submodules https://github.com/rahulkhatri137/SGSIs -b main13 SGSIs
          fi
          sudo bash SGSIs/setup.sh

      - name: Building AB DEVICES SGSI...
        run: |
          sudo chmod -R 777 SGSIs
          cd SGSIs
          sudo bash url2SGSI.sh $ROM_URL $TYPE:$ROM

      - name: Repack output file ...
        run: |
          cd SGSIs
          sudo chmod -R 777 output
          cd output
          ls
          gzip -qf9 *img
          ls
          sudo rm -rf *.img

      - name: Show SGSI info...
        run: |
          cd SGSIs/output
          cat README.txt

      - name: Upload SGSI to SourceForge
        if: ${{ env.SF == 'true' }}
        run: |
          cd SGSIs/output
          ls
          expect -c "
          spawn sftp ${{ secrets.SFUSER }}@frs.sourceforge.net
          expect \"yes/no\"
          send \"yes\r\"
          expect \"Password\"
          send \"${{ secrets.SFPASS }}\r\"
          expect \"sftp> \"
          send \"cd ${{ secrets.SFDIR }}\r\"
          set timeout -1
          send \"mkdir $ROM\r\"
          expect \"sftp> \"
          send \"cd $ROM\r\"
          set timeout -1
          send \"put *\r\"
          expect \"Uploading\"
          expect \"100%\"
          expect \"sftp>\"
          send \"bye\r\"
          interact"

      - name: Upload SGSI to WeTransfer...
        if: ${{ env.WET == 'true' }}
        run: |
          cd SGSIs/output
          curl -sL https://git.io/file-transfer | sh
          sudo chmod a+x transfer
          ./transfer wet ./*img.gz

      - name: Upload SGSI to PixelDrain...
        if: ${{ env.PD == 'true' }}
        run: |
          cd SGSIs/output
          wget https://raw.githubusercontent.com/Fornax96/pdup/master/pdup
          sudo chmod a+x pdup
          ./pdup ./*img.gz

      - name: Upload SGSI to GitHub Release...
        if: ${{ env.GHR == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          files: SGSIs/output/*.img.gz
          name: SGSI137-${{ env.ROM }}-Android${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
